!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).subslate=t.subslate||{})}(this,(function(t){"use strict";const e=t=>Array.isArray(t)&&t.length>0,o=t=>e(t)&&2===t.length&&t.every((t=>"string"==typeof t)),n=(t,n,r="Missing Provided Input")=>{if(void 0===t)return[n];if("string"==typeof t)return[[t,t]];if(o(t))return[t];if((t=>e(t)&&t.every((t=>o(t))))(t))return t;throw Error(r)};function r(t){return t.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}const s=t=>!!t&&"object"==typeof t&&null!==t&&Object.keys(t).every((t=>"symbol"!=typeof t));function a(t,e){return Object.prototype.hasOwnProperty.call(t,e)}const i=Symbol("Blank Value");class l{constructor(t){this.context=t}getContextVal(t,e,o){const n=t.content,a=this.context,{allowRootBracket:l,allowUnquotedProps:c,sanitizer:p}=o,{per:f,opBracket:u,clBracket:d,quote:h,apostrophe:g,backtick:m}=e,y=[h,g,m].flat().filter((t=>n?.includes(t))).map((t=>r(t)));function b(t,e,o=0){let s=i,a=0;const p=Object.keys(e);t:{if(0===o)for(const n of p)if(t.startsWith(n,o)){s=e[n],a=n.length;break t}if(0!==o)for(const n of f)if(t.startsWith(n,o))for(const r of p)if(t.startsWith(n+r,o)){s=e[r],a=n.length+r.length;break t}if(0!==o||l){const i=u.map(((t,e)=>[t,d[e]])).filter((e=>t.includes(e[0])&&t.includes(e[1])));let l=null;for(const[e,n]of i)if(t.startsWith(e,o)){l=[e,n];break}if(null===l)break t;const[f,h]=l.map((t=>r(t)));for(const t of[...y,...c?[""]:[]])for(const i of p){const l=r(i),c=RegExp(`^[\\s\\S]{${o}}(${f}\\s*${t}(${l})${t}\\s*${h})`);c.lastIndex=o;const p=c.exec(n);if(p&&p[2]){s=e[i],a=p[1].length;break t}}}}return[s,a]}let x=i,j=0;for(;n?.length>j;){const t=x===i?a:x;if(!s(t))break;const[e,o]=b(n,t,j);if(0===o)break;j+=o,x=e}if(x=p(x===i?{isEmpty:!0,id:n,at:j}:{isEmpty:!1,value:x,id:n}),"string"!=typeof x)throw Error("Sanitizer did not provide string");return x}}const c={"'":"'",'"':'"',"\\":"\\","`":"`","[":"[","]":"]"},p=t=>a(c,t)?c[t]:t,f={".":["&period;"],"\\":["&#x27;"],"'":["&apos;"],'"':["&quot;"],"[":["&lsqb;"],"]":["&rsqb;"]},u=t=>`\\u${Number.prototype.toString.call(t,16).toUpperCase()}`,d=t=>`&#x${Number.prototype.toString.call(t,16).toUpperCase()};`,h=(t,e)=>[...t].map((t=>t.split("").map((t=>({js:u,html:d}[e](String.prototype.charCodeAt.call(t,0))))).join(""))).join(""),g={url:t=>[encodeURIComponent(t)],html:t=>[[...t].map((t=>h(t,"html"))).join(""),[...t].map((t=>(t=>a(f,t)?f[t]:t)(t))).join("")],js:t=>[[...t].map((t=>p(t))).join(""),[...t].map((t=>h(t,"js"))).join("")],json:t=>[[...t].map((t=>p(t))).join(""),[...t].map((t=>h(t,"js"))).join("")]},m=(t,e)=>{const o=new Set;for(const n in e)Object.prototype.hasOwnProperty.call(g,n)&&g[n](t).forEach((t=>o.add(t)));return Array.from(o)},y=t=>({startStopPairs:n(t.startStopPairs,["${","}"],"Invalid startStopPairs"),escapeSep:void 0!==t.escapeSep&&t.escapeSep,allowUnquotedProps:!!t.allowUnquotedProps,allowRootBracket:!!t.allowRootBracket,sanitizer:t.sanitizer||(t=>!0===t.isEmpty?"undefined":String(t.value)),maxNameLength:t.maxNameLength||256}),b=m,x=t=>{const[e,o,n,r,s,a]=[".","[","]",'"',"'","`"].map((e=>t?m(e,t):[e]));return{per:e,opBracket:o,clBracket:n,quote:r,apostrophe:s,backtick:a}},j=(t,e,o)=>{const n=s(o)?o:{},a=y(n),{startStopPairs:i,escapeSep:c,maxNameLength:p}=a,f=i.filter((e=>t.includes(e[0])&&t.includes(e[1]))).map((t=>[r(t[0]),r(t[1])])).map((([t,e])=>`(?:${t}\\s*([\\s\\S]{0,${p}}?)\\s*${e})`)),u=new Map,d=RegExp(f.join("|"),"g"),h=()=>{d.lastIndex=0},g=()=>d.exec(t);for(const t of function(t,e,o){return{[Symbol.iterator]:()=>({next(){const n=t(...e);return n?{done:!1,value:n}:(o&&o(),{done:!0,value:void 0})}})}}(g,[],h))if(null!==t){const{index:e}=t,[o,n]=t.filter((t=>"string"==typeof t));if(!o&&!d.lastIndex)break;if(u.has(o)){const t=u.get(o);t&&t.indexes.push(e)}else u.set(o,{content:n,indexes:[e]})}const m=new l(e);let b=0;const j=[...t],k=x(c);for(const[t,e]of u){Object.prototype.hasOwnProperty.call(e,"value")||(e.value=m.getContextVal(e,k,a));for(const o of e.indexes){const n=String(e.value||"");j.splice(o+b,t.length,...n),b+=n.length-t.length}}return j.join("")};t.createEscapes=b,t.default=j,t.getDefaultOptions=y,t.getSeparators=x,t.subslate=j,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=subslate.poly.js.map
